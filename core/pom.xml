<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	you under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.apache.isis.core</groupId>
		<artifactId>isis-parent</artifactId>
		<version>2.0.0-M3-SNAPSHOT</version>
		<relativePath>../core-parent/pom.xml</relativePath>
	</parent>

	<groupId>org.apache.isis.core</groupId>
	<artifactId>isis</artifactId>
	<version>2.0.0-M3-SNAPSHOT</version>

	<packaging>pom</packaging>

	<name>Apache Isis Core</name>

	<url>https://isis.apache.org</url>

	<description>
        Core framework, providing metamodel, runtime and core APIs.
    </description>

	<properties>
		<revision>2.0.0-M3-SNAPSHOT</revision>

		<isis.skipTests>false</isis.skipTests>
		<maven.test.skip>${isis.skipTests}</maven.test.skip>

		<coreBaseDir>${project.build.directory}/..</coreBaseDir>

		<jar-plugin.automaticModuleName>org.apache.isis.core</jar-plugin.automaticModuleName>
		<git-plugin.propertiesDir>org/apache/isis/core</git-plugin.propertiesDir>
		<git-plugin.gitDir>${coreBaseDir}/../.git</git-plugin.gitDir>

		<compileSource>8</compileSource>
		<compileTarget>8</compileTarget>
		<compiler-plugin.compilerArgument>-parameters</compiler-plugin.compilerArgument>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<dependency.locations.enabled>false</dependency.locations.enabled>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<surefire-plugin.argLine>-Xms1024m -Xmx1024m</surefire-plugin.argLine>
		<testsToExclude>**/*IntegrationTest.java</testsToExclude>

		<checkstyle.configLocation>${coreBaseDir}/codequality/checkstyle.xml</checkstyle.configLocation>
		<pmd.ruleset>${coreBaseDir}/codequality/pmd.xml</pmd.ruleset>

		<license.additional-notes>In addition, Apache Isis uses some Javascript libraries:

			* Twitter Bootstrap, licensed under MIT [1]
			* Bootstrap-Growl (JQuery plugin), licensed under MIT license [2]
			* LiveQuery (JQuery plugin), licensed under MIT license [3]
			* Wicket Bootstrap, licenced under ASL 2 [4]
			* Bootstrap Datetimepicker, licensed under MIT licence [5]
			* Moment.js, licenced under MIT licence [6]

			[1] https://github.com/twbs/bootstrap/blob/master/LICENSE
			[2] https://github.com/mouse0270/bootstrap-growl/blob/master/LICENSE
			[3] https://github.com/brandonaaron/livequery#license
			[4] https://github.com/l0rdn1kk0n/wicket-bootstrap
			[5] https://github.com/Eonasdan/bootstrap-datetimepicker/blob/master/LICENSE
			[6] https://github.com/moment/moment/blob/develop/LICENSE</license.additional-notes>


		<!-- LIBRARY DEPENDENCIES -->

		<approvaltests.version>4.0.2</approvaltests.version>

		<assertj-guava.version>3.1.0</assertj-guava.version>

		<camel.version>2.14.2</camel.version>

		<commons-email.version>1.4</commons-email.version>
		<commons-httpclient.version>3.1</commons-httpclient.version>
		<commons-io.version>2.6</commons-io.version>
		<commons-logging.version>1.2</commons-logging.version>

		<cxf-rt-rs-client.version>3.3.4</cxf-rt-rs-client.version>

		<danhaywood-java-assertjext.version>0.1.0</danhaywood-java-assertjext.version>
		<danhaywood-java-testsupport.version>1.0.0</danhaywood-java-testsupport.version>

		<datanucleus-api-jdo.version>5.2.2</datanucleus-api-jdo.version>
		<datanucleus-core.version>5.2.2</datanucleus-core.version>
		<datanucleus-jdo-api.version>3.2.0-m12</datanucleus-jdo-api.version>
		<datanucleus-jdo-query.version>5.0.9</datanucleus-jdo-query.version>
		<datanucleus-jodatime.version>5.2.0-release</datanucleus-jodatime.version>
		<datanucleus-maven-plugin.version>5.2.1</datanucleus-maven-plugin.version>
		<datanucleus-rdbms.version>5.2.1</datanucleus-rdbms.version>

		<docx4j.version>3.2.1</docx4j.version>

		<easymock.version>2.5.2</easymock.version>
		<error_prone_annotations.version>2.3.2</error_prone_annotations.version>

		<findbugs-annotations.version>2.0.1</findbugs-annotations.version>

		<guava.version>28.1-jre</guava.version>

		<htmlparser.version>2.1</htmlparser.version>

		<jakarta.annotation-api.version>1.3.5</jakarta.annotation-api.version>
		<javaee.version>8.0</javaee.version>
		<javafaker.version>1.0.1</javafaker.version>
		<javassist.version>3.19.0-GA</javassist.version>
		<javax-servlet.version>3.1.0</javax-servlet.version>
		<jaxb-core.version>2.3.0.1</jaxb-core.version>
		<jaxb-impl.version>2.3.0.1</jaxb-impl.version>
		<jaxws-ri.version>2.3.2</jaxws-ri.version>

		<jbcrypt.version>0.4</jbcrypt.version>
		<jboss-jaxrs-api_2.0_spec.version>1.0.0.Final</jboss-jaxrs-api_2.0_spec.version>

		<jdo-api.version>3.1</jdo-api.version> <!-- see also datanucleus.x.x versions -->

		<jdom.version>2.0.2</jdom.version>
		<jmock.version>2.11.0</jmock.version>
		<jopt-simple.version>6.0-alpha-3</jopt-simple.version>
		<jquery-ui.version>1.12.1</jquery-ui.version>

		<jsr305.version>3.0.2</jsr305.version>

		<junit.jupiter.version>5.3.2</junit.jupiter.version>
		<junit-legacy.version>4.12</junit-legacy.version>

		<log4jdbc-remix.version>0.2.7</log4jdbc-remix.version>

		<objenesis.version>2.2</objenesis.version>
		<ognl.version>3.0.9</ognl.version>

		<pdfbox.version>2.0.12</pdfbox.version>
		<picocontainer.version>2.15</picocontainer.version>
		<poi.version>4.1.1</poi.version>

		<quartz-scheduler.version>2.2.1</quartz-scheduler.version>

		<resteasy4-jaxrs.version>4.0.0.Beta5</resteasy4-jaxrs.version> <!-- Isis Resteasy Plugin 4 (for JEE 8 JAX-RS API 2.1) -->

		<select2.version>4.0.10</select2.version>
		<shiro.version>1.4.1</shiro.version>
		<simpleslackapi.version>1.2.0</simpleslackapi.version>
		<slf4j-api.version>1.7.26</slf4j-api.version> <!-- as provided by spring-boot, needed to solve convergence issues -->
		<spring-framework.version>5.2.0.RELEASE</spring-framework.version>
		<spring-boot.version>2.2.0.RELEASE</spring-boot.version>
		<summernote.version>0.8.11</summernote.version>
		<swagger-core.version>1.5.21</swagger-core.version>

		<togglz.version>2.1.0.Final</togglz.version>

		<wicket.version>8.6.1</wicket.version>
		<wicket-bootstrap.version>2.0.11</wicket-bootstrap.version> <!-- de.agilecoders.wicket:wicket-bootstrap-core -->
		<wicket-bootstrap-core.version>2.0.11</wicket-bootstrap-core.version>
		<wicket-bootstrap-datetimepicker.version>4.17.37-1</wicket-bootstrap-datetimepicker.version>
		<wicket-fullcalendar.version>2.2.0</wicket-fullcalendar.version>
		<wicket-source.version>7.0.0</wicket-source.version>
		<wicket-webjars.version>2.0.15</wicket-webjars.version>

		<wicketstuff.version>8.6.0</wicketstuff.version> <!-- org.wicketstuff:wicketstuff-select2 -->
		<wicketstuff-gmap3.version>${wicket.version}</wicketstuff-gmap3.version>

		<xdocreport.version>1.0.6</xdocreport.version>

	</properties>

	<pluginRepositories>
		<pluginRepository>
			<id>DataNucleus_2</id>
			<url>http://www.datanucleus.org/downloads/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>Apache Repository</id>
			<url>https://repository.apache.org/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
<!--
 		<repository>
 			<id>Spring Milestones</id>
 			<url>https://repo.spring.io/milestone/</url>
 			<snapshots>
 				<enabled>false</enabled>
 			</snapshots>
 		</repository>
-->
		<repository>
			<id>JBoss Public Release</id>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<!-- required for RestEasy -->
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

	</repositories>


	<build>
		<outputDirectory>${project.build.directory}/classes</outputDirectory>
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>

		<extensions>
			<!-- scp and sftp support for deployments. -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.4</version>
			</extension>
			<!-- ftp support for deployments. -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>2.4</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.archetype</groupId>
				<artifactId>archetype-packaging</artifactId>
				<version>2.2</version>
			</extension>
		</extensions>

		<pluginManagement>
			<plugins>

				<!-- IDE support for Eclipse (if not using m2e). (NetBeans 6.7+ and IDEA
					7.0+ also have built-in support -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
						<projectNameTemplate>[groupId].[artifactId]</projectNameTemplate>
					</configuration>
					<!-- use mvn eclipse:eclipse (no goals bound to phases) -->
				</plugin>

				<!-- Copies project resources to the output directory -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<!-- goal:resources binds to phase:process-resources -->
					<!-- goal:testResources binds to phase:process-test-resources -->
				</plugin>

				<!-- Compile -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<showDeprecation>false</showDeprecation>
						<showWarnings>false</showWarnings>
						<source>${compileSource}</source>
						<target>${compileTarget}</target>
						<compilerArgs>
					        <arg>${compiler-plugin.compilerArgument}</arg>
					    </compilerArgs>
					</configuration>
					<!-- goal:compile binds to phase:compile -->
					<!-- goal:testCompile binds to phase:test-compile -->
				</plugin>

				<!-- Tests (ignore integration tests) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- override defaults and include everything unless explicitly excluded -->
						<includes>
							<include>**/*.java</include>
						</includes>
						<excludes>
							<exclude>${testsToExclude}</exclude>
						</excludes>
						<printSummary>false</printSummary>
						<argLine>${surefire-plugin.argLine}</argLine>
					</configuration>
					<!-- goal:test binds to phase:test -->
				</plugin>


				<!-- Test Reporting -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.22.2</version>
					<!-- goal:report is a report so is configured in the reporting section; 
						invokes phase:test before running itself -->
				</plugin>


				<!-- Test coverage: cobertura -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.6</version>
					<inherited>true</inherited>
					<!-- goal:check binds to phase:verify (not currently configured, can 
						be used to break build if code coverage < threshold) -->
					<!-- goal:cobertura is a report so is configured in the reporting section; 
						invokes phase:test before running itself -->
				</plugin>


				<!-- Quality checks: checkstyle -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>2.11</version>
					<!-- goal:check binds to phase:verify (not currently configured, can 
						be used to break build if any violations) -->
					<!-- goal:checkstyle is a report so is configured in the reporting section -->
				</plugin>

				<!-- Quality checks: pmd -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>3.0.1</version>
					<!-- goal:check binds to phase:verify (not currently configured, can 
						be used to break build if any violations) -->
					<!-- goal:check-cpd binds to phase:verify (not currently configured, 
						can be used to break build if any CPD violations) -->
					<!-- goal:pmd is a report so is configured in the reporting section -->
					<!-- goal:cpd is a report so is configured in the reporting section -->
				</plugin>

				<!-- Quality checks: NCSS (cyclomatic complexity) -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>javancss-maven-plugin</artifactId>
					<version>2.0</version>
					<!-- goal:check binds to phase:verify (not currently configured, can 
						be used to break build if any violations) -->
					<!-- goal:report is a report so is configured in the reporting section -->
				</plugin>

				<!-- Quality checks: jdepend -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jdepend-maven-plugin</artifactId>
					<version>2.0-beta-2</version>
					<!-- goal:generate is a report so is configured in the reporting section -->
				</plugin>

				<!-- Artifacts derived from code: taglist -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>taglist-maven-plugin</artifactId>
					<version>2.4</version>
					<inherited>true</inherited>
					<!-- goal:taglist is a report so is configured in the reporting section -->
				</plugin>

				<!-- Artifacts derived from code: javadoc; supports both build and report 
					goals; not included as a build plugin except through profiles (to speed up 
					the build) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9.1</version>
					<inherited>true</inherited>
					<configuration>
						<!-- as per http://stackoverflow.com/a/16743137/56880; only if using 
							java 8 to build -->
						<!-- <additionalparam>-Xdoclint:none</additionalparam> -->
						<debug>true</debug>
						<minmemory>128m</minmemory>
						<maxmemory>1024m</maxmemory>
						<quiet>true</quiet>
						<doctitle>${project.name} ${project.version}</doctitle>
						<windowtitle>${project.name} ${project.version}</windowtitle>
						<testDoctitle>${project.name} ${project.version}
							(TEST API)
						</testDoctitle>
						<testWindowtitle>${project.name}
							${project.version} (TEST API)
						</testWindowtitle>
						<splitindex>true</splitindex>
						<encoding>${project.build.sourceEncoding}</encoding>
						<links>
							<link>http://docs.oracle.com/javase/7/docs/api/</link>
							<link>http://docs.oracle.com/javase/6/docs/api/</link>
							<link>http://docs.oracle.com/javase/1.5.0/docs/api/</link>
						</links>
						<linksource>true</linksource>
						<!-- http://jira.codehaus.org/browse/MJAVADOC-268 and http://jira.codehaus.org/browse/MJAVADOC-284 -->
						<detectOfflineLinks>false</detectOfflineLinks>
						<additionalparam>
							-Xdoclint:none
						</additionalparam>
					</configuration>
					<!-- goal:aggregate (for aggregator modules) has no binding; explicitly 
						bound in profiles -->
					<!-- goal:jar (for non-aggregator modules) binds to phase:package -->
					<!-- goal:test-jar (for non-aggregator modules) binds to phase:package -->
					<!-- goal:javadoc is a report so is configured in the reporting section -->
				</plugin>

				<!-- Artifacts derived from code: Java source x-ref -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>2.4</version>
					<!-- goal:jxr is a report so is configured in the reporting section -->
				</plugin>


				<!-- Packaging: source jars of main and test code -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.2.1</version>
					<configuration>
						<includePom>true</includePom>
					</configuration>
					<!-- goal:aggregate (for aggregator modules) binds to phase:package -->
					<!-- goal:jar and goal:test-jar are meant to bind to phase:package, 
						but doesn't seem to so bound explicitly -->
					<executions>
						<execution>
							<id>package-jars</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>


				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>2.2.3</version>
					<executions>
						<execution>
							<id>get-the-git-infos</id>
							<goals>
								<goal>revision</goal>
							</goals>
							<phase>validate</phase>
						</execution>
					</executions>

					<configuration>
						<verbose>false</verbose>
						<dotGitDirectory>${git-plugin.gitDir}</dotGitDirectory>

						<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
						<dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>

						<failOnNoGitDirectory>true</failOnNoGitDirectory>
						<injectAllReactorProjects>true</injectAllReactorProjects>

						<generateGitPropertiesFile>true</generateGitPropertiesFile>
						<generateGitPropertiesFilename>${project.build.outputDirectory}/${git-plugin.propertiesDir}/git.properties</generateGitPropertiesFilename>

						<abbrevLength>7</abbrevLength>
					</configuration>

				</plugin>


				<!-- Packaging: jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<!-- goal:jar binds to phase:package -->
					<!-- goal:test-jar supposedly binds to phase:package, but seems to need 
						this explicit binding. -->
					<executions>
						<execution>
							<id>package-test-jar</id>
							<phase>package</phase>
							<goals>
								<goal>test-jar</goal>
							</goals>
							<configuration>
								<archive>
									<manifest>
										<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
										<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									</manifest>
								</archive>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<archive>
							<manifest>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Automatic-Module-Name>${jar-plugin.automaticModuleName}</Automatic-Module-Name>
								<Implementation-Vendor-Id>org.apache.isis</Implementation-Vendor-Id>
								<Implementation-Vendor>Apache Isis™ Project</Implementation-Vendor>
								<Bundle-SymbolicName>${jar-plugin.automaticModuleName}</Bundle-SymbolicName>
								<SCM-Revision>${git.commit.id.abbrev}</SCM-Revision>
								<!-- required for DN plugin.xml loading -->
								<Bundle-SymbolicName>${jar-plugin.automaticModuleName}</Bundle-SymbolicName>
								<!-- no requirement as of yet. <Bundle-ManifestVersion>2</Bundle-ManifestVersion> 
									<Bundle-Name>${jar-plugin.automaticModuleName}</Bundle-Name> <Bundle-Version>2.0.0-M3-SNAPSHOT</Bundle-Version>
									<Bundle-Vendor>Apache Isis™ Project</Bundle-Vendor> -->
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>


				<!-- Packaging: WAR -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<warSourceExcludes>
							WEB-INF/lib/*.jar
						</warSourceExcludes>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>lib/</classpathPrefix>
							</manifest>
						</archive>
					</configuration>
					<!-- goal:war binds to phase:package -->
				</plugin>

				<!-- site (see also reporting and distributionManagement) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<locales>en</locales>
						<jarOutputDirectory>
							${project.build.directory}/site
						</jarOutputDirectory>
						<finalName>isis-${project.version}</finalName>
						<jarOutputDirectory>
							${project.reporting.outputDirectory}
						</jarOutputDirectory>
						<generateReports>true</generateReports>
						<generateSitemap>true</generateSitemap>
					</configuration>
					<!-- goal:jar binds to phase:package; override to bind to (site lifecycle) 
						phase:site -->
					<executions>
						<execution>
							<id>jar</id>
							<phase>site</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					<!-- goal:site binds to (site lifecycle) phase:site -->
					<!-- goal:deploy binds to (site lifecycle) phase:site-deploy -->
				</plugin>


				<!-- maven reports (for site) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.7</version>
					<!-- main configuration in reporting section (in inheriting modules) -->
				</plugin>


				<!-- release (is also configured in descendant modules) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<!-- overriddes the default ('clean verify') as workaround -->
						<preparationGoals>clean install</preparationGoals>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<localCheckout>true</localCheckout>
						<pushChanges>false</pushChanges>
						<waitBeforeTagging>1</waitBeforeTagging>
					</configuration>
					<!-- goal:clean (for aggregator modules) has no bindings; cleans up 
						release.properties and any backup POM files -->
					<!-- goal:prepare (for aggregator modules) has no bindings; prepares 
						for release in SCM (modifying x.x-SNAPSHOT to x.x) -->
					<!-- goal:update-versions (for aggregator modules) has no bindings; 
						updates versions eg to SNAPSHOT -->
					<!-- etc; none of the goals has a binding. -->
				</plugin>


				<!-- deploy (see also distributionManagement) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.1</version>
					<!-- goal:deploy binds to phase:deploy -->
				</plugin>


				<!-- other types of build: archetype -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>2.2</version>
					<extensions>true</extensions>
					<!-- no goals bind to any lifecycle phases; use mvn archetype:generate -->
				</plugin>


				<!-- Runtime: jetty -->
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty.version}</version>
					<configuration>
						<webAppConfig>
							<contextPath>webapp</contextPath>
						</webAppConfig>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0-M1</version>
					<configuration>
						<rules>
							<requireMavenVersion>
								<version>[3.5.0,)</version>
							</requireMavenVersion>
							<requireJavaVersion>
								<version>[1.8.0,)</version>
							</requireJavaVersion>
							<!-- seemingly not compatible with use of 2.0.0-M3-SNAPSHOT placeholders
								<requirePluginVersions> <message>All plugin versions must be defined!</message> 
								<banLatest>true</banLatest> <banRelease>true</banRelease> </requirePluginVersions> -->
							<DependencyConvergence />
						</rules>
					</configuration>
					<!-- goal:enforce supposedly binds to phase:validate, but explicit binding 
						seems to be required -->
					<executions>
						<execution>
							<id>validate-enforce</id>
							<phase>validate</phase>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.1</version>
				</plugin>

				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>yuicompressor-maven-plugin</artifactId>
					<version>1.5.1</version>
					<configuration>
						<statistics>true</statistics>
						<jswarn>false</jswarn>
						<suffix>.min</suffix>
						<excludes>
							<exclude>**/moment.js</exclude>
							<exclude>**/moment.min.js</exclude>
							<exclude>**/bootstrap-datetimepicker.js</exclude>
							<exclude>**/bootstrap-datetimepicker.min.js</exclude>
							<exclude>**/bootstrap-growl.js</exclude>
							<exclude>**/bootstrap-growl.min.js</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>compress</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>


		<!-- build plugins; apply to all inheriting modules. Note that some plugins 
			also come from the "super-POM" for the default bindings. For example, in 
			the 'default' lifecycle, the resources, compiler, surefire, jar, install 
			and deploy plugins are automatically included because they provide the default 
			bindings. For the 'site' lifecycle, the site plugin is automatically included. -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<plugin>
				<artifactId>maven-remote-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>process-remote-resources</id>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
						
						    <!-- Reference the supplemental-model artifact from module supplemental-model -->
				            <supplementalModelArtifacts>
				            	<supplementalModelArtifact>org.apache.isis:supplemental-model:1.0</supplementalModelArtifact>
				            </supplementalModelArtifacts>
						
							<runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
							
							 <!-- Specify the path, relative to the JAR root, where the supplemental model file is located -->
							<supplementalModels>
								<supplementalModel>supplemental-models.xml</supplementalModel>
							</supplementalModels>
							<resourceBundles>
								<resourceBundle>org.apache:apache-jar-resource-bundle:1.4</resourceBundle>
							</resourceBundles>
							<properties>
								<projectTimespan>2010~2019</projectTimespan>
								<postDepListText>
									The above (auto-generated) list aggregates the
									dependencies
									(either directly
									or transitively) of all the modules
									that make up ${project.name}.
									You can use
									mvn dependency:list or
									mvn dependency:tree to view dependencies by
									submodule.

									${license.additional-notes}
								</postDepListText>
							</properties>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- run using: mvn org.apache.rat:apache-rat-plugin:check -->
			<plugin>
				<groupId>org.apache.rat</groupId>
				<artifactId>apache-rat-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<!-- overrides the default ('clean verify') -->
					<preparationGoals>clean install</preparationGoals>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<dependencyManagement>

		<dependencies>

			<!-- CHILD MODULES -->
			<!-- for benefit of application developers, using scope=import, type=pom -->
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-commons</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-unittestsupport</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-unittestsupport</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-applib</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-applib</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-config</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-config</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-schema</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-schema</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-metamodel</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-metamodel</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-runtime</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-runtime</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-runtime-extensions</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-runtime-extensions</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-runtime-services</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-runtime-services</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-runtime-web</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-runtime-web</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-integtestsupport</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-restfulobjects-applib</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-restfulobjects-applib</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-restfulobjects-rendering</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-restfulobjects-rendering</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-restfulobjects-server</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-restfulobjects-server</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-security</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-security-bypass</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-security-shiro</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-security-keycloak</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-plugins-codegen-bytebuddy</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-plugins-jdo-common</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-plugins-jdo-datanucleus-5</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-plugins-jaxrs-resteasy-4</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-wicket-model</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-wicket-model</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<scope>test</scope>
				<type>test-jar</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-wicket-ui</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-wicket-ui</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<scope>test</scope>
				<type>test-jar</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-wicket-impl</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.core</groupId>
				<artifactId>isis-viewer-wicket-impl</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<scope>test</scope>
				<type>test-jar</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-testing</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-webapp</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.isis.mavendeps</groupId>
				<artifactId>isis-mavendeps-jdk11</artifactId>
				<version>2.0.0-M3-SNAPSHOT</version>
				<type>pom</type>
			</dependency>


			<!-- THIRD PARTY DEPENDENCIES -->


			<dependency>
				<groupId>com.approvaltests</groupId>
				<artifactId>approvaltests</artifactId>
				<version>${approvaltests.version}</version>
			</dependency>

			<dependency>
				<groupId>com.danhaywood.java</groupId>
				<artifactId>danhaywood-java-assertjext</artifactId>
				<version>${danhaywood-java-assertjext.version}</version>
			</dependency>
			<dependency>
				<groupId>com.danhaywood.java</groupId>
				<artifactId>danhaywood-java-testsupport</artifactId>
				<version>${danhaywood-java-testsupport.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.google.errorprone</groupId>
				<artifactId>error_prone_annotations</artifactId>
				<version>${error_prone_annotations.version}</version>
			</dependency>

			<!-- provides @Nullable -->
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>annotations</artifactId>
				<version>${findbugs-annotations.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>${jsr305.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons-httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<!-- required because resteasy-jaxrs declares as a test dependency whereas
					httpclient4 needs it as a compile dependency -->
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons-logging.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.javafaker</groupId>
				<artifactId>javafaker</artifactId>
				<version>${javafaker.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ullink.slack</groupId>
				<artifactId>simpleslackapi</artifactId>
				<version>${simpleslackapi.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-core</artifactId>
				<version>${jaxb-core.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${jaxb-impl.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.ws</groupId>
				<artifactId>jaxws-ri</artifactId>
				<version>${jaxws-ri.version}</version>
				<type>pom</type>
			</dependency>


			<dependency>
				<groupId>de.agilecoders.wicket</groupId>
				<artifactId>wicket-bootstrap-core</artifactId>
				<version>${wicket-bootstrap-core.version}</version>
			</dependency>
			<dependency>
				<groupId>de.agilecoders.wicket</groupId>
				<artifactId>wicket-bootstrap-extensions</artifactId>
				<version>${wicket-bootstrap.version}</version>
			</dependency>
			<dependency>
				<groupId>de.agilecoders.wicket</groupId>
				<artifactId>wicket-bootstrap-themes</artifactId>
				<version>${wicket-bootstrap.version}</version>
			</dependency>
			<dependency>
				<groupId>de.agilecoders.wicket.webjars</groupId>
				<artifactId>wicket-webjars</artifactId>
				<version>${wicket-webjars.version}</version>
			</dependency>

			<dependency>
				<groupId>fr.opensagres.xdocreport</groupId>
				<artifactId>fr.opensagres.xdocreport.document.docx</artifactId>
				<version>${xdocreport.version}</version>
			</dependency>
			<dependency>
				<groupId>fr.opensagres.xdocreport</groupId>
				<artifactId>fr.opensagres.xdocreport.template.freemarker</artifactId>
				<version>${xdocreport.version}</version>
			</dependency>
			<dependency>
				<groupId>fr.opensagres.xdocreport</groupId>
				<artifactId>fr.opensagres.xdocreport.converter.docx.xwpf</artifactId>
				<version>${xdocreport.version}</version>
			</dependency>

			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-core</artifactId>
				<version>${swagger-core.version}</version>
			</dependency>

			<dependency>
				<groupId>jakarta.annotation</groupId>
				<artifactId>jakarta.annotation-api</artifactId>
				<version>${jakarta.annotation-api.version}</version>
			</dependency>

			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>${javaee.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax-servlet.version}</version>
			</dependency>

			<dependency>
			    <groupId>javax.jdo</groupId>
			    <artifactId>jdo-api</artifactId>
			    <version>${jdo-api.version}</version>
			</dependency>

			<dependency>
				<groupId>net.sf.jopt-simple</groupId>
				<artifactId>jopt-simple</artifactId>
				<version>${jopt-simple.version}</version>
			</dependency>

			<dependency>
				<groupId>net.ftlines.wicket-fullcalendar</groupId>
				<artifactId>wicket-fullcalendar-core</artifactId>
				<version>${wicket-fullcalendar.version}</version>
			</dependency>

			<dependency>
				<groupId>net.ftlines.wicket-source</groupId>
				<!-- <groupId>com.github.jennybrown8.wicket-source</groupId> -->
				<artifactId>wicket-source</artifactId>
				<version>${wicket-source.version}</version>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>ognl</groupId>
				<artifactId>ognl</artifactId>
				<version>${ognl.version}</version>
				<exclusions>
					<exclusion>
						<groupId>javassist</groupId>
						<artifactId>javassist</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jms</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-stream</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-ognl</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jaxb</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jackson</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring-javaconfig</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-cxf</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test</artifactId>
				<version>${camel.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test-spring</artifactId>
				<version>${camel.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-email</artifactId>
				<version>${commons-email.version}</version>
				<exclusions>
					<!-- excluded because provided by javax:javaee-api -->
					<exclusion>
						<groupId>com.sun.mail</groupId>
						<artifactId>javax.mail</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-client</artifactId>
				<version>${cxf-rt-rs-client.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>pdfbox</artifactId>
				<version>${pdfbox.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml-schemas</artifactId>
				<version>${poi.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-web</artifactId>
				<version>${shiro.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket</artifactId>
				<version>${wicket.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-core</artifactId>
				<version>${wicket.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-devutils</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-request</artifactId>
				<version>${wicket.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-util</artifactId>
				<version>${wicket.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-extensions</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-datetime</artifactId>
				<version>${wicket.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-auth-roles</artifactId>
				<version>${wicket.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-spring</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-guava</artifactId>
				<version>${assertj-guava.version}</version>
			</dependency>

			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-api-jdo</artifactId>
				<version>${datanucleus-api-jdo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-core</artifactId>
				<version>${datanucleus-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-jdo-query</artifactId>
				<version>${datanucleus-jdo-query.version}</version>
			</dependency>
			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-jodatime</artifactId>
				<version>${datanucleus-jodatime.version}</version>
			</dependency>
			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-rdbms</artifactId>
				<version>${datanucleus-rdbms.version}</version>
			</dependency>
			<dependency>
				<groupId>org.datanucleus</groupId>
				<artifactId>javax.jdo</artifactId>
				<version>${datanucleus-jdo-api.version}</version>
			</dependency>

			<dependency>
				<groupId>org.docx4j</groupId>
				<artifactId>docx4j</artifactId>
				<version>${docx4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.htmlparser</groupId>
				<artifactId>htmlparser</artifactId>
				<version>${htmlparser.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun</groupId>
						<artifactId>tools</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.spec.javax.ws.rs</groupId>
				<artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
				<version>${jboss-jaxrs-api_2.0_spec.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jdom</groupId>
				<artifactId>jdom</artifactId>
				<version>${jdom.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jackson-provider</artifactId>
				<version>${resteasy4-jaxrs.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jaxrs</artifactId>
				<version>${resteasy4-jaxrs.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jaxb-provider</artifactId>
				<version>${resteasy4-jaxrs.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock</artifactId>
				<version>${jmock.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-junit4</artifactId>
				<version>${jmock.version}</version>
			</dependency>

			<dependency>
				<groupId>org.lazyluke</groupId>
				<artifactId>log4jdbc-remix</artifactId>
				<version>${log4jdbc-remix.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mindrot</groupId>
				<artifactId>jbcrypt</artifactId>
				<version>${jbcrypt.version}</version>
			</dependency>

			<dependency>
				<groupId>org.objenesis</groupId>
				<artifactId>objenesis</artifactId>
				<version>${objenesis.version}</version>
			</dependency>

			<dependency>
				<groupId>org.picocontainer</groupId>
				<artifactId>picocontainer</artifactId>
				<version>${picocontainer.version}</version>
			</dependency>

			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz-scheduler.version}</version>
			</dependency>
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz-jobs</artifactId>
				<version>${quartz-scheduler.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j-api.version}</version>
			</dependency>

			<dependency>
				<groupId>org.togglz</groupId>
				<artifactId>togglz-core</artifactId>
				<version>${togglz.version}</version>
			</dependency>
			<dependency>
				<groupId>org.togglz</groupId>
				<artifactId>togglz-junit</artifactId>
				<version>${togglz.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.togglz</groupId>
				<artifactId>togglz-servlet</artifactId>
				<version>${togglz.version}</version>
			</dependency>
			<dependency>
				<groupId>org.togglz</groupId>
				<artifactId>togglz-console</artifactId>
				<version>${togglz.version}</version>
			</dependency>

			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>jquery-ui</artifactId>
				<version>${jquery-ui.version}</version>
			</dependency>

			<!-- TODO: when used, move exclusions down -->
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>Eonasdan-bootstrap-datetimepicker</artifactId>
				<version>${wicket-bootstrap-datetimepicker.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.webjars</groupId>
						<artifactId>momentjs</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>select2</artifactId>
				<version>${select2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.webjars.bower</groupId>
				<artifactId>summernote</artifactId>
				<version>${summernote.version}</version>
			</dependency>

			<dependency>
				<groupId>org.wicketstuff</groupId>
				<artifactId>wicketstuff-gmap3</artifactId>
				<version>${wicketstuff-gmap3.version}</version>
			</dependency>

			<dependency>
				<groupId>org.wicketstuff</groupId>
				<artifactId>wicketstuff-select2</artifactId>
				<version>${wicketstuff.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- COMPILE DEPENDENCIES -->

		<!-- TEST DEPENDENCIES -->
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit-dep</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>apache-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-toolchains-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<goals>
									<goal>toolchain</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<toolchains>
								<jdk>
									<version>1.8</version>
									<vendor>oracle</vendor>
								</jdk>
							</toolchains>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>jdk11</id>
			<activation>
				<jdk>[11,)</jdk>
			</activation>

			<build>
				<plugins>
					<!-- Compile -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<showDeprecation>true</showDeprecation>
							<showWarnings>true</showWarnings>
							<source>8</source>
							<target>8</target>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.jvnet.jaxb2.maven2</groupId>
						<artifactId>maven-jaxb2-plugin</artifactId>
						<version>0.14.0</version>
						<configuration>
							<removeOldOutput>true</removeOldOutput>
							<episode>true</episode>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>m2e</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<directory>target-ide</directory>
			</build>
		</profile>

		<profile>
			<id>nexus-deploy</id>
			<activation>
				<property>
					<name>nexus-deploy</name>
				</property>
			</activation>
			<properties>
				<nexus-deploy.repositoryUrl>http://localhost:8081/repository/builds</nexus-deploy.repositoryUrl>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.8</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>nexus-deploy.serverId</serverId>
							<skipStaging>true</skipStaging>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<repository>
					<id>nexus-deploy.serverId</id>
					<url>${nexus-deploy.repositoryUrl}</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>github-deploy</id>
			<activation>
				<property>
					<name>github-deploy.repositoryUrl</name>
				</property>
			</activation>
			<distributionManagement>
				<repository>
					<id>github-deploy.serverId</id>
					<name>GitHub Apache Isis Maven Packages (Nightly)</name>
					<url>${github-deploy.repositoryUrl}</url>
				</repository>
			</distributionManagement>
		</profile>
	
		<profile>
			<id>gcpappenginerepo-deploy</id>
			<activation>
				<property>
					<name>gcpappenginerepo-deploy.repositoryUrl</name>
				</property>
			</activation>
			<distributionManagement>
				<repository>
					<id>gcpappenginerepo-deploy.serverId</id>
					<url>${gcpappenginerepo-deploy.repositoryUrl}</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>owasp</id>
			<activation>
				<property>
					<name>owasp</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.owasp</groupId>
						<artifactId>dependency-check-maven</artifactId>
						<version>1.3.1</version>
						<executions>
							<execution>
								<id>owasp-aggregate</id>
								<goals>
									<goal>aggregate</goal>
								</goals>
								<configuration>
									<skipProvidedScope>true</skipProvidedScope>
									<skipRuntimeScope>true</skipRuntimeScope>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jdeps</id>
			<activation>
				<property>
					<name>jdeps</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jdeps-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>jdeps-jdkinternals</id>
								<goals>
									<goal>jdkinternals</goal>
									<goal>test-jdkinternals</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>src</id>
			<activation>
				<property>
					<name>!skip.src</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>git</id>
			<activation>
				<property>
					<name>git</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- as per https://stackoverflow.com/a/28860520/56880 allows -Dgpg.passphrase= 
				to be used rather than gpg.useagent inherited from parent. Note that this 
				requires gpg v2.1+ -->
			<id>gpg</id>
			<activation>
				<property>
					<name>gpg.passphrase</name>
				</property>
			</activation>
			<properties>
				<gpg.useagent>false</gpg.useagent>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-release-artifacts</id>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<gpgArguments>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
									</gpgArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>datanucleusenhance</id>
			<activation>
				<file>
					<exists>${basedir}/logging-dn-enhance.properties</exists>
				</file>
			</activation>
			<properties>
				<datanucleus-maven-plugin.log4jConfiguration>${basedir}/logging-dn-enhance.properties</datanucleus-maven-plugin.log4jConfiguration>
				<datanucleus-maven-plugin.verbose>true</datanucleus-maven-plugin.verbose>
				<datanucleus-maven-plugin.fork>false</datanucleus-maven-plugin.fork>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-maven-plugin</artifactId>
						<version>${datanucleus-maven-plugin.version}</version>
						<configuration>
							<fork>${datanucleus-maven-plugin.fork}</fork>
							<log4jConfiguration>${datanucleus-maven-plugin.log4jConfiguration}</log4jConfiguration>
							<verbose>${datanucleus-maven-plugin.verbose}</verbose>
						</configuration>
						<executions>
							<execution>
								<id>process-classes</id>
								<phase>process-classes</phase>
								<goals>
									<goal>enhance</goal>
								</goals>
							</execution>
							<execution>
								<id>process-test-classes</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>test-enhance</goal>
								</goals>
								<configuration>
									<metadataDirectory>${project.build.testOutputDirectory}</metadataDirectory>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-core</artifactId>
								<version>${datanucleus-core.version}</version>
							</dependency>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-api-jdo</artifactId>
								<version>${datanucleus-api-jdo.version}</version>
							</dependency>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-jodatime</artifactId>
								<version>${datanucleus-jodatime.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<modules>
	
		<module>../supplemental-model</module>

		<module>schema</module>
		<module>commons</module>
		<module>config</module>
		<module>applib</module>
		<module>metamodel</module>
		<module>runtime</module>
		<module>runtime-services</module>
		<module>runtime-extensions</module>
		<module>runtime-web</module>

		<module>security/api</module>
		<module>security/bypass</module>

		<module>testsupport/unittestsupport</module>
		<module>testsupport/integtestsupport</module>

		<module>viewer-restfulobjects/applib</module>
		<module>viewer-restfulobjects/rendering</module>
		<module>viewer-restfulobjects/server</module>

		<module>viewer-wicket/model</module>
		<module>viewer-wicket/ui</module>
		<module>viewer-wicket/impl</module>

		<module>plugins/codegen-bytebuddy</module>
		<module>plugins/jaxrs-resteasy-4</module>
		<module>plugins/jdo/common</module>
		<module>plugins/jdo/datanucleus-5</module>
		<module>security/shiro</module>
		<module>security/keycloak</module>

		<!-- to break cyclic dependencies some tests needed to be moved to their 
			own modules -->
		<module>detached-tests</module>
	</modules>

</project>


